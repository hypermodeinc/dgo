//
// SPDX-FileCopyrightText: © Hypermode Inc. <hello@hypermode.com>
// SPDX-License-Identifier: Apache-2.0

// Style guide for Protocol Buffer 3.
// Use CamelCase (with an initial capital) for message names – for example,
// SongServerRequest. Use underscore_separated_names for field names – for
// example, song_name.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: api.v25.proto

package api_v25

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LeaseType int32

const (
	LeaseType_NS  LeaseType = 0
	LeaseType_UID LeaseType = 1
	LeaseType_TS  LeaseType = 2
)

// Enum value maps for LeaseType.
var (
	LeaseType_name = map[int32]string{
		0: "NS",
		1: "UID",
		2: "TS",
	}
	LeaseType_value = map[string]int32{
		"NS":  0,
		"UID": 1,
		"TS":  2,
	}
)

func (x LeaseType) Enum() *LeaseType {
	p := new(LeaseType)
	*p = x
	return p
}

func (x LeaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v25_proto_enumTypes[0].Descriptor()
}

func (LeaseType) Type() protoreflect.EnumType {
	return &file_api_v25_proto_enumTypes[0]
}

func (x LeaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeaseType.Descriptor instead.
func (LeaseType) EnumDescriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{0}
}

type AlterOp int32

const (
	AlterOp_NONE                 AlterOp = 0
	AlterOp_DROP_ALL             AlterOp = 1
	AlterOp_DROP_ALL_IN_NS       AlterOp = 2
	AlterOp_DROP_DATA_IN_NS      AlterOp = 3
	AlterOp_DROP_PREDICATE_IN_NS AlterOp = 4
	AlterOp_DROP_TYPE_IN_NS      AlterOp = 5
	AlterOp_SCHEMA_IN_NS         AlterOp = 6
)

// Enum value maps for AlterOp.
var (
	AlterOp_name = map[int32]string{
		0: "NONE",
		1: "DROP_ALL",
		2: "DROP_ALL_IN_NS",
		3: "DROP_DATA_IN_NS",
		4: "DROP_PREDICATE_IN_NS",
		5: "DROP_TYPE_IN_NS",
		6: "SCHEMA_IN_NS",
	}
	AlterOp_value = map[string]int32{
		"NONE":                 0,
		"DROP_ALL":             1,
		"DROP_ALL_IN_NS":       2,
		"DROP_DATA_IN_NS":      3,
		"DROP_PREDICATE_IN_NS": 4,
		"DROP_TYPE_IN_NS":      5,
		"SCHEMA_IN_NS":         6,
	}
)

func (x AlterOp) Enum() *AlterOp {
	p := new(AlterOp)
	*p = x
	return p
}

func (x AlterOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlterOp) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v25_proto_enumTypes[1].Descriptor()
}

func (AlterOp) Type() protoreflect.EnumType {
	return &file_api_v25_proto_enumTypes[1]
}

func (x AlterOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlterOp.Descriptor instead.
func (AlterOp) EnumDescriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{1}
}

type RespFormat int32

const (
	RespFormat_JSON RespFormat = 0
	RespFormat_RDF  RespFormat = 1
)

// Enum value maps for RespFormat.
var (
	RespFormat_name = map[int32]string{
		0: "JSON",
		1: "RDF",
	}
	RespFormat_value = map[string]int32{
		"JSON": 0,
		"RDF":  1,
	}
)

func (x RespFormat) Enum() *RespFormat {
	p := new(RespFormat)
	*p = x
	return p
}

func (x RespFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RespFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v25_proto_enumTypes[2].Descriptor()
}

func (RespFormat) Type() protoreflect.EnumType {
	return &file_api_v25_proto_enumTypes[2]
}

func (x RespFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RespFormat.Descriptor instead.
func (RespFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{2}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{0}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type AllocateIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HowMany   uint64    `protobuf:"varint,1,opt,name=how_many,json=howMany,proto3" json:"how_many,omitempty"`
	LeaseType LeaseType `protobuf:"varint,2,opt,name=lease_type,json=leaseType,proto3,enum=api.v25.LeaseType" json:"lease_type,omitempty"`
}

func (x *AllocateIDsRequest) Reset() {
	*x = AllocateIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateIDsRequest) ProtoMessage() {}

func (x *AllocateIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateIDsRequest.ProtoReflect.Descriptor instead.
func (*AllocateIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{2}
}

func (x *AllocateIDsRequest) GetHowMany() uint64 {
	if x != nil {
		return x.HowMany
	}
	return 0
}

func (x *AllocateIDsRequest) GetLeaseType() LeaseType {
	if x != nil {
		return x.LeaseType
	}
	return LeaseType_NS
}

type AllocateIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"` // inclusive
}

func (x *AllocateIDsResponse) Reset() {
	*x = AllocateIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateIDsResponse) ProtoMessage() {}

func (x *AllocateIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateIDsResponse.ProtoReflect.Descriptor instead.
func (*AllocateIDsResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{3}
}

func (x *AllocateIDsResponse) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *AllocateIDsResponse) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

type SignInUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password     string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *SignInUserRequest) Reset() {
	*x = SignInUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInUserRequest) ProtoMessage() {}

func (x *SignInUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInUserRequest.ProtoReflect.Descriptor instead.
func (*SignInUserRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{4}
}

func (x *SignInUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SignInUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignInUserRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type SignInUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessJwt  string `protobuf:"bytes,1,opt,name=access_jwt,json=accessJwt,proto3" json:"access_jwt,omitempty"`
	RefreshJwt string `protobuf:"bytes,2,opt,name=refresh_jwt,json=refreshJwt,proto3" json:"refresh_jwt,omitempty"`
}

func (x *SignInUserResponse) Reset() {
	*x = SignInUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInUserResponse) ProtoMessage() {}

func (x *SignInUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInUserResponse.ProtoReflect.Descriptor instead.
func (*SignInUserResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{5}
}

func (x *SignInUserResponse) GetAccessJwt() string {
	if x != nil {
		return x.AccessJwt
	}
	return ""
}

func (x *SignInUserResponse) GetRefreshJwt() string {
	if x != nil {
		return x.RefreshJwt
	}
	return ""
}

type AlterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op              AlterOp `protobuf:"varint,1,opt,name=op,proto3,enum=api.v25.AlterOp" json:"op,omitempty"`
	NsName          string  `protobuf:"bytes,2,opt,name=ns_name,json=nsName,proto3" json:"ns_name,omitempty"`
	Schema          string  `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	RunInBackground bool    `protobuf:"varint,4,opt,name=run_in_background,json=runInBackground,proto3" json:"run_in_background,omitempty"`
	PredicateToDrop string  `protobuf:"bytes,5,opt,name=predicate_to_drop,json=predicateToDrop,proto3" json:"predicate_to_drop,omitempty"`
	TypeToDrop      string  `protobuf:"bytes,6,opt,name=type_to_drop,json=typeToDrop,proto3" json:"type_to_drop,omitempty"`
}

func (x *AlterRequest) Reset() {
	*x = AlterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterRequest) ProtoMessage() {}

func (x *AlterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterRequest.ProtoReflect.Descriptor instead.
func (*AlterRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{6}
}

func (x *AlterRequest) GetOp() AlterOp {
	if x != nil {
		return x.Op
	}
	return AlterOp_NONE
}

func (x *AlterRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *AlterRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *AlterRequest) GetRunInBackground() bool {
	if x != nil {
		return x.RunInBackground
	}
	return false
}

func (x *AlterRequest) GetPredicateToDrop() string {
	if x != nil {
		return x.PredicateToDrop
	}
	return ""
}

func (x *AlterRequest) GetTypeToDrop() string {
	if x != nil {
		return x.TypeToDrop
	}
	return ""
}

type AlterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AlterResponse) Reset() {
	*x = AlterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterResponse) ProtoMessage() {}

func (x *AlterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterResponse.ProtoReflect.Descriptor instead.
func (*AlterResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{7}
}

type RunDQLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NsName     string            `protobuf:"bytes,1,opt,name=ns_name,json=nsName,proto3" json:"ns_name,omitempty"`
	DqlQuery   string            `protobuf:"bytes,2,opt,name=dql_query,json=dqlQuery,proto3" json:"dql_query,omitempty"`
	Vars       map[string]string `protobuf:"bytes,3,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReadOnly   bool              `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	BestEffort bool              `protobuf:"varint,5,opt,name=best_effort,json=bestEffort,proto3" json:"best_effort,omitempty"`
	RespFormat RespFormat        `protobuf:"varint,6,opt,name=resp_format,json=respFormat,proto3,enum=api.v25.RespFormat" json:"resp_format,omitempty"`
}

func (x *RunDQLRequest) Reset() {
	*x = RunDQLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunDQLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunDQLRequest) ProtoMessage() {}

func (x *RunDQLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunDQLRequest.ProtoReflect.Descriptor instead.
func (*RunDQLRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{8}
}

func (x *RunDQLRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *RunDQLRequest) GetDqlQuery() string {
	if x != nil {
		return x.DqlQuery
	}
	return ""
}

func (x *RunDQLRequest) GetVars() map[string]string {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *RunDQLRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *RunDQLRequest) GetBestEffort() bool {
	if x != nil {
		return x.BestEffort
	}
	return false
}

func (x *RunDQLRequest) GetRespFormat() RespFormat {
	if x != nil {
		return x.RespFormat
	}
	return RespFormat_JSON
}

type RunDQLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn         *TxnContext       `protobuf:"bytes,1,opt,name=txn,proto3" json:"txn,omitempty"`
	QueryResult []byte            `protobuf:"bytes,2,opt,name=query_result,json=queryResult,proto3" json:"query_result,omitempty"`                                                                                   // could be rdf or json
	BlankUids   map[string]string `protobuf:"bytes,3,rep,name=blank_uids,json=blankUids,proto3" json:"blank_uids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // mapping of blank_node => uid in hex
	Latency     *Latency          `protobuf:"bytes,4,opt,name=latency,proto3" json:"latency,omitempty"`
	Metrics     *Metrics          `protobuf:"bytes,5,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *RunDQLResponse) Reset() {
	*x = RunDQLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunDQLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunDQLResponse) ProtoMessage() {}

func (x *RunDQLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunDQLResponse.ProtoReflect.Descriptor instead.
func (*RunDQLResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{9}
}

func (x *RunDQLResponse) GetTxn() *TxnContext {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *RunDQLResponse) GetQueryResult() []byte {
	if x != nil {
		return x.QueryResult
	}
	return nil
}

func (x *RunDQLResponse) GetBlankUids() map[string]string {
	if x != nil {
		return x.BlankUids
	}
	return nil
}

func (x *RunDQLResponse) GetLatency() *Latency {
	if x != nil {
		return x.Latency
	}
	return nil
}

func (x *RunDQLResponse) GetMetrics() *Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type TxnContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTs  uint64   `protobuf:"varint,1,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	CommitTs uint64   `protobuf:"varint,2,opt,name=commit_ts,json=commitTs,proto3" json:"commit_ts,omitempty"`
	Aborted  bool     `protobuf:"varint,3,opt,name=aborted,proto3" json:"aborted,omitempty"`
	Keys     []string `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`   // List of keys to be used for conflict detection.
	Preds    []string `protobuf:"bytes,5,rep,name=preds,proto3" json:"preds,omitempty"` // List of predicates involved in this transaction.
	Hash     string   `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TxnContext) Reset() {
	*x = TxnContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxnContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnContext) ProtoMessage() {}

func (x *TxnContext) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnContext.ProtoReflect.Descriptor instead.
func (*TxnContext) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{10}
}

func (x *TxnContext) GetStartTs() uint64 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

func (x *TxnContext) GetCommitTs() uint64 {
	if x != nil {
		return x.CommitTs
	}
	return 0
}

func (x *TxnContext) GetAborted() bool {
	if x != nil {
		return x.Aborted
	}
	return false
}

func (x *TxnContext) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *TxnContext) GetPreds() []string {
	if x != nil {
		return x.Preds
	}
	return nil
}

func (x *TxnContext) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type Latency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParsingNs         uint64 `protobuf:"varint,1,opt,name=parsing_ns,json=parsingNs,proto3" json:"parsing_ns,omitempty"`
	ProcessingNs      uint64 `protobuf:"varint,2,opt,name=processing_ns,json=processingNs,proto3" json:"processing_ns,omitempty"`
	RespEncodingNs    uint64 `protobuf:"varint,3,opt,name=resp_encoding_ns,json=respEncodingNs,proto3" json:"resp_encoding_ns,omitempty"`
	AssignTimestampNs uint64 `protobuf:"varint,4,opt,name=assign_timestamp_ns,json=assignTimestampNs,proto3" json:"assign_timestamp_ns,omitempty"`
	TotalNs           uint64 `protobuf:"varint,5,opt,name=total_ns,json=totalNs,proto3" json:"total_ns,omitempty"`
}

func (x *Latency) Reset() {
	*x = Latency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Latency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Latency) ProtoMessage() {}

func (x *Latency) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Latency.ProtoReflect.Descriptor instead.
func (*Latency) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{11}
}

func (x *Latency) GetParsingNs() uint64 {
	if x != nil {
		return x.ParsingNs
	}
	return 0
}

func (x *Latency) GetProcessingNs() uint64 {
	if x != nil {
		return x.ProcessingNs
	}
	return 0
}

func (x *Latency) GetRespEncodingNs() uint64 {
	if x != nil {
		return x.RespEncodingNs
	}
	return 0
}

func (x *Latency) GetAssignTimestampNs() uint64 {
	if x != nil {
		return x.AssignTimestampNs
	}
	return 0
}

func (x *Latency) GetTotalNs() uint64 {
	if x != nil {
		return x.TotalNs
	}
	return 0
}

type Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uids_touched is the map of number of uids read for each attribute/predicate.
	UidsTouched map[string]uint64 `protobuf:"bytes,1,rep,name=uids_touched,json=uidsTouched,proto3" json:"uids_touched,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{12}
}

func (x *Metrics) GetUidsTouched() map[string]uint64 {
	if x != nil {
		return x.UidsTouched
	}
	return nil
}

type CreateNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NsName string `protobuf:"bytes,1,opt,name=ns_name,json=nsName,proto3" json:"ns_name,omitempty"`
}

func (x *CreateNamespaceRequest) Reset() {
	*x = CreateNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceRequest) ProtoMessage() {}

func (x *CreateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{13}
}

func (x *CreateNamespaceRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

type CreateNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNamespaceResponse) Reset() {
	*x = CreateNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceResponse) ProtoMessage() {}

func (x *CreateNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceResponse.ProtoReflect.Descriptor instead.
func (*CreateNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{14}
}

type DropNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NsName string `protobuf:"bytes,1,opt,name=ns_name,json=nsName,proto3" json:"ns_name,omitempty"`
}

func (x *DropNamespaceRequest) Reset() {
	*x = DropNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropNamespaceRequest) ProtoMessage() {}

func (x *DropNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropNamespaceRequest.ProtoReflect.Descriptor instead.
func (*DropNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{15}
}

func (x *DropNamespaceRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

type DropNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DropNamespaceResponse) Reset() {
	*x = DropNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropNamespaceResponse) ProtoMessage() {}

func (x *DropNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropNamespaceResponse.ProtoReflect.Descriptor instead.
func (*DropNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{16}
}

type UpdateNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NsName     string `protobuf:"bytes,1,opt,name=ns_name,json=nsName,proto3" json:"ns_name,omitempty"`
	RenameToNs string `protobuf:"bytes,2,opt,name=rename_to_ns,json=renameToNs,proto3" json:"rename_to_ns,omitempty"`
}

func (x *UpdateNamespaceRequest) Reset() {
	*x = UpdateNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceRequest) ProtoMessage() {}

func (x *UpdateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateNamespaceRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *UpdateNamespaceRequest) GetRenameToNs() string {
	if x != nil {
		return x.RenameToNs
	}
	return ""
}

type UpdateNamespaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNamespaceResponse) Reset() {
	*x = UpdateNamespaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceResponse) ProtoMessage() {}

func (x *UpdateNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceResponse.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{18}
}

type ListNamespacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNamespacesRequest) Reset() {
	*x = ListNamespacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesRequest) ProtoMessage() {}

func (x *ListNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesRequest.ProtoReflect.Descriptor instead.
func (*ListNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{19}
}

type ListNamespacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NsList map[string]*Namespace `protobuf:"bytes,1,rep,name=ns_list,json=nsList,proto3" json:"ns_list,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListNamespacesResponse) Reset() {
	*x = ListNamespacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesResponse) ProtoMessage() {}

func (x *ListNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesResponse.ProtoReflect.Descriptor instead.
func (*ListNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{20}
}

func (x *ListNamespacesResponse) GetNsList() map[string]*Namespace {
	if x != nil {
		return x.NsList
	}
	return nil
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id   uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v25_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_api_v25_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_api_v25_proto_rawDescGZIP(), []int{21}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_api_v25_proto protoreflect.FileDescriptor

var file_api_v25_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x62, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x77, 0x5f, 0x6d,
	0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x68, 0x6f, 0x77, 0x4d, 0x61,
	0x6e, 0x79, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35,
	0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x22, 0x6d, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x54, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4a, 0x77, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x6a, 0x77, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4a, 0x77, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0c, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x6f, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35,
	0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2a, 0x0a,
	0x11, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x75, 0x6e, 0x49, 0x6e, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70,
	0x65, 0x54, 0x6f, 0x44, 0x72, 0x6f, 0x70, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa8, 0x02, 0x0a, 0x0d, 0x52, 0x75, 0x6e,
	0x44, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x34, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x52, 0x75, 0x6e, 0x44, 0x51, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x66, 0x66, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x65, 0x73, 0x74, 0x45, 0x66,
	0x66, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1a, 0x37, 0x0a, 0x09, 0x56, 0x61,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xb7, 0x02, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x44, 0x51, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x74, 0x78, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x54, 0x78,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x45, 0x0a, 0x0a, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x52,
	0x75, 0x6e, 0x44, 0x51, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6c,
	0x61, 0x6e, 0x6b, 0x55, 0x69, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x62, 0x6c,
	0x61, 0x6e, 0x6b, 0x55, 0x69, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x35, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a,
	0x3c, 0x0a, 0x0e, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x55, 0x69, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01,
	0x0a, 0x0a, 0x54, 0x78, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x54, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x65, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x65, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xc2, 0x01, 0x0a,
	0x07, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x73, 0x69, 0x6e, 0x67, 0x4e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4e, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x4e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x4e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x44, 0x0a,
	0x0c, 0x75, 0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x55, 0x69, 0x64, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x75, 0x69, 0x64, 0x73, 0x54, 0x6f, 0x75, 0x63,
	0x68, 0x65, 0x64, 0x1a, 0x3e, 0x0a, 0x10, 0x55, 0x69, 0x64, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x31, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2f, 0x0a, 0x14, 0x44, 0x72, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x72, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x4e, 0x73,
	0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x07, 0x6e, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x4d, 0x0a, 0x0b, 0x4e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x2f, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x24, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x53, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x49,
	0x44, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x53, 0x10, 0x02, 0x2a, 0x8b, 0x01, 0x0a, 0x07,
	0x41, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x4e,
	0x53, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x49, 0x4e, 0x5f, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x52, 0x4f, 0x50,
	0x5f, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x4e, 0x53,
	0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x5f, 0x4e, 0x53, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x43, 0x48, 0x45, 0x4d,
	0x41, 0x5f, 0x49, 0x4e, 0x5f, 0x4e, 0x53, 0x10, 0x06, 0x2a, 0x1f, 0x0a, 0x0a, 0x52, 0x65, 0x73,
	0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x44, 0x46, 0x10, 0x01, 0x32, 0xa2, 0x05, 0x0a, 0x06, 0x44,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x35, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x44, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x35, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x05, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x35, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x52,
	0x75, 0x6e, 0x44, 0x51, 0x4c, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e,
	0x52, 0x75, 0x6e, 0x44, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x52, 0x75, 0x6e, 0x44, 0x51, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x4a, 0x0a, 0x0d, 0x69, 0x6f, 0x2e, 0x64, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x32, 0x35,
	0x42, 0x0b, 0x44, 0x67, 0x72, 0x61, 0x70, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2d, 0x69, 0x6f, 0x2f, 0x64, 0x67, 0x6f, 0x2f, 0x76, 0x32, 0x34, 0x30, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x35, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_v25_proto_rawDescOnce sync.Once
	file_api_v25_proto_rawDescData = file_api_v25_proto_rawDesc
)

func file_api_v25_proto_rawDescGZIP() []byte {
	file_api_v25_proto_rawDescOnce.Do(func() {
		file_api_v25_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v25_proto_rawDescData)
	})
	return file_api_v25_proto_rawDescData
}

var file_api_v25_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v25_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_api_v25_proto_goTypes = []interface{}{
	(LeaseType)(0),                  // 0: api.v25.LeaseType
	(AlterOp)(0),                    // 1: api.v25.AlterOp
	(RespFormat)(0),                 // 2: api.v25.RespFormat
	(*PingRequest)(nil),             // 3: api.v25.PingRequest
	(*PingResponse)(nil),            // 4: api.v25.PingResponse
	(*AllocateIDsRequest)(nil),      // 5: api.v25.AllocateIDsRequest
	(*AllocateIDsResponse)(nil),     // 6: api.v25.AllocateIDsResponse
	(*SignInUserRequest)(nil),       // 7: api.v25.SignInUserRequest
	(*SignInUserResponse)(nil),      // 8: api.v25.SignInUserResponse
	(*AlterRequest)(nil),            // 9: api.v25.AlterRequest
	(*AlterResponse)(nil),           // 10: api.v25.AlterResponse
	(*RunDQLRequest)(nil),           // 11: api.v25.RunDQLRequest
	(*RunDQLResponse)(nil),          // 12: api.v25.RunDQLResponse
	(*TxnContext)(nil),              // 13: api.v25.TxnContext
	(*Latency)(nil),                 // 14: api.v25.Latency
	(*Metrics)(nil),                 // 15: api.v25.Metrics
	(*CreateNamespaceRequest)(nil),  // 16: api.v25.CreateNamespaceRequest
	(*CreateNamespaceResponse)(nil), // 17: api.v25.CreateNamespaceResponse
	(*DropNamespaceRequest)(nil),    // 18: api.v25.DropNamespaceRequest
	(*DropNamespaceResponse)(nil),   // 19: api.v25.DropNamespaceResponse
	(*UpdateNamespaceRequest)(nil),  // 20: api.v25.UpdateNamespaceRequest
	(*UpdateNamespaceResponse)(nil), // 21: api.v25.UpdateNamespaceResponse
	(*ListNamespacesRequest)(nil),   // 22: api.v25.ListNamespacesRequest
	(*ListNamespacesResponse)(nil),  // 23: api.v25.ListNamespacesResponse
	(*Namespace)(nil),               // 24: api.v25.Namespace
	nil,                             // 25: api.v25.RunDQLRequest.VarsEntry
	nil,                             // 26: api.v25.RunDQLResponse.BlankUidsEntry
	nil,                             // 27: api.v25.Metrics.UidsTouchedEntry
	nil,                             // 28: api.v25.ListNamespacesResponse.NsListEntry
}
var file_api_v25_proto_depIdxs = []int32{
	0,  // 0: api.v25.AllocateIDsRequest.lease_type:type_name -> api.v25.LeaseType
	1,  // 1: api.v25.AlterRequest.op:type_name -> api.v25.AlterOp
	25, // 2: api.v25.RunDQLRequest.vars:type_name -> api.v25.RunDQLRequest.VarsEntry
	2,  // 3: api.v25.RunDQLRequest.resp_format:type_name -> api.v25.RespFormat
	13, // 4: api.v25.RunDQLResponse.txn:type_name -> api.v25.TxnContext
	26, // 5: api.v25.RunDQLResponse.blank_uids:type_name -> api.v25.RunDQLResponse.BlankUidsEntry
	14, // 6: api.v25.RunDQLResponse.latency:type_name -> api.v25.Latency
	15, // 7: api.v25.RunDQLResponse.metrics:type_name -> api.v25.Metrics
	27, // 8: api.v25.Metrics.uids_touched:type_name -> api.v25.Metrics.UidsTouchedEntry
	28, // 9: api.v25.ListNamespacesResponse.ns_list:type_name -> api.v25.ListNamespacesResponse.NsListEntry
	24, // 10: api.v25.ListNamespacesResponse.NsListEntry.value:type_name -> api.v25.Namespace
	3,  // 11: api.v25.Dgraph.Ping:input_type -> api.v25.PingRequest
	5,  // 12: api.v25.Dgraph.AllocateIDs:input_type -> api.v25.AllocateIDsRequest
	7,  // 13: api.v25.Dgraph.SignInUser:input_type -> api.v25.SignInUserRequest
	9,  // 14: api.v25.Dgraph.Alter:input_type -> api.v25.AlterRequest
	11, // 15: api.v25.Dgraph.RunDQL:input_type -> api.v25.RunDQLRequest
	16, // 16: api.v25.Dgraph.CreateNamespace:input_type -> api.v25.CreateNamespaceRequest
	18, // 17: api.v25.Dgraph.DropNamespace:input_type -> api.v25.DropNamespaceRequest
	20, // 18: api.v25.Dgraph.UpdateNamespace:input_type -> api.v25.UpdateNamespaceRequest
	22, // 19: api.v25.Dgraph.ListNamespaces:input_type -> api.v25.ListNamespacesRequest
	4,  // 20: api.v25.Dgraph.Ping:output_type -> api.v25.PingResponse
	6,  // 21: api.v25.Dgraph.AllocateIDs:output_type -> api.v25.AllocateIDsResponse
	8,  // 22: api.v25.Dgraph.SignInUser:output_type -> api.v25.SignInUserResponse
	10, // 23: api.v25.Dgraph.Alter:output_type -> api.v25.AlterResponse
	12, // 24: api.v25.Dgraph.RunDQL:output_type -> api.v25.RunDQLResponse
	17, // 25: api.v25.Dgraph.CreateNamespace:output_type -> api.v25.CreateNamespaceResponse
	19, // 26: api.v25.Dgraph.DropNamespace:output_type -> api.v25.DropNamespaceResponse
	21, // 27: api.v25.Dgraph.UpdateNamespace:output_type -> api.v25.UpdateNamespaceResponse
	23, // 28: api.v25.Dgraph.ListNamespaces:output_type -> api.v25.ListNamespacesResponse
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_v25_proto_init() }
func file_api_v25_proto_init() {
	if File_api_v25_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v25_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunDQLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunDQLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxnContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Latency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNamespaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v25_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v25_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v25_proto_goTypes,
		DependencyIndexes: file_api_v25_proto_depIdxs,
		EnumInfos:         file_api_v25_proto_enumTypes,
		MessageInfos:      file_api_v25_proto_msgTypes,
	}.Build()
	File_api_v25_proto = out.File
	file_api_v25_proto_rawDesc = nil
	file_api_v25_proto_goTypes = nil
	file_api_v25_proto_depIdxs = nil
}
